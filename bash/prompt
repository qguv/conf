#!/bin/bash
# prompt settings

function __prompt_char() {
    if ! _in "$PWD" "${GIT_PROMPT_DIRS_BLACKLIST[@]}" && git rev-parse --git-dir >& /dev/null; then
        printf 'Â±'
    elif [ $UID -eq 0 ]; then
        printf '#'
    else
        printf ']'
    fi
}

function __git_prompt() {
    printf ' '

    # ignore blacklisted directories
    _in "$PWD" "${GIT_PROMPT_DIRS_BLACKLIST[@]}" && return

    # ignore non-git directories
    git rev-parse --git-dir >& /dev/null || return

    # unmerged files (red highlight)
    if [ -n "$(git ls-files -u >& /dev/null)" ]; then
        printf '%%F{red}%%S'

    # dirty working dir (red)
    elif ! git diff --quiet >& /dev/null || ! git diff --cached --quiet >& /dev/null; then
        printf '%%F{red}'

    # clean working dir (green)
    else
        printf '%%F{green}'
    fi

    # get branch name or parenthesized message describing where we are
    printf "$(git branch | sed -n '/\* /s:::p')%%f%%s "
}

if [ -n "$ZSH_VERSION" ]; then
    setopt prompt_subst
    RPS1='%~$(__git_prompt)(%n@%m)'
else
    shopt -s promptvars
fi

PS1='$(__prompt_char) '

if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi
PS1='${debian_chroot:+($debian_chroot)}'"$PS1"
