#!/bin/sh
# shell startup

# uncomment to debug shell startup, then run zprof at first interpreter prompt
#[ -n "$ZSH_VERSION" ] && zmodload zsh/zprof

# respect XDG_CONFIG_HOME
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CONFIG_DIRS="/etc/xdg"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_DATA_DIRS="/usr/local/share/:/usr/share/"
export XDG_CACHE_HOME="$HOME/.cache"
#export XDG_RUNTIME_DIR="$HOME/$TMPDIR"

# prefer locally built packages
export PATH="$HOME/.built/bin:$HOME/dev/go/bin:$HOME/go/bin:$PATH"

source "$XDG_CONFIG_HOME/bash/system"
source "$XDG_CONFIG_HOME/bash/initcommands"
source "$XDG_CONFIG_HOME/bash/functions"
source "$XDG_CONFIG_HOME/bash/aliases"

if tty -s; then
  while [ "$START_SWAY" = true ] && [ -z "$DISPLAY" ] && [ "$(tty)" = /dev/tty1 ]; do
    sway
    sleep 5 || break
  done

  # when this feature is enabled, connect every shell that's attached to a real TTY to the same tmux window group
  if [ "$TTY_USE_TMUX" = true ] && [ -z "$TMUX" ]; then

    # get the first detached session's ID
    gid="$(tmux list-sessions 2>/dev/null | grep -ve '(attached)$' | grep -oe '^[0-9]\+:' | head -n 1)"

    unset wid
    if [ -z "$gid" ]; then
      gid="$(tmux new-session -dP)"
      wid="$gid"
    fi

    # create a new session in that session group
    sid="$(tmux new-session -dPc "$(pwd)" -t "$gid")"

    # create window if we didn't before
    if [ -z "$wid" ]; then
      wid="$(tmux new-window -Pt "$sid")"
    fi

    # don't leave the session open if detached
    (sleep 1; tmux set-option -t "$sid" destroy-unattached on) &

    # attach the session
    exec tmux attach-session -t "$sid"
  fi

  source "$XDG_CONFIG_HOME/bash/prompt"
fi
