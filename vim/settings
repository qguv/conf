" vim:syn=vim
" Non-compatable settings
set nocompatible
set ruler
set showcmd
set incsearch
set wildmenu
set backspace=2
set nojoinspaces " no double-spacing after full stops when joining lines

" Syntax-highlighting
filetype plugin indent on
syntax enable
set background=dark
colorscheme solarized

" Other programming niceties
set number
set smartcase
set shell=/bin/zsh
set concealcursor=c
set conceallevel=1
set confirm
set fileformat=unix
set fileformats=unix,mac,dos
let g:haskell_conceal_wide=1

" setting default indent
set tabstop=2
set shiftwidth=2
set expandtab

if system('uname') =~ 'Darwin.*'
  nmap <silent> K <Plug>DashSearch
  autocmd BufNewFile,BufRead {*.coffee} DashKeywords javascript underscore coffeescript
  autocmd BufNewFile,BufRead {*.js} DashKeywords javascript underscore
endif

" disable Ex mode; who needs this anyway?
map Q <Nop>

" arrow keys switch between split windows
" (and shifted versions move those windows around)
" they don't do anything else anyway
nnoremap <silent> <Right>   :wincmd l<CR>
nnoremap <silent> <Left>    :wincmd h<CR>
nnoremap <silent> <Up>      :wincmd k<CR>
nnoremap <silent> <Down>    :wincmd j<CR>
nnoremap <silent> <S-Right> :wincmd L<CR>
nnoremap <silent> <S-Left>  :wincmd H<CR>
nnoremap <silent> <S-Up>    :wincmd K<CR>
nnoremap <silent> <S-Down>  :wincmd J<CR>

" pymode lint is broken at the moment.
let g:pymode_lint = 0

" pymode rebinds one of my leaders. unacceptable.
let g:pymode_run=0

" autopep8 ignores the dumber pep8 guidelines
" 501: lines less than 80 characters
"   * dumb because this ain't 1970
" 201-2: every list, comprehension or not, has cozy square brackets
"   * dumb because comprehensions should have breathing room
" 301-3: weird arbitrary rules on newlines
"   * dumb because it's hard to tell '\n' from '\n+'
" the rest of the rules are really good; let's stick to those
let g:autopep8_ignore="E501,E201,E202,E301,E302,E303"

" Setting Strong Cryptography with :X
set cm=blowfish 

" Highlight search results
set hlsearch

" Leader bindings
" [t]abify: open window as new tab
nnoremap <Leader>t :wincmd T<CR>
" [c]leanslate: close current tab and open a new one
noremap <Leader>c :tabe<CR>gT:x<CR>
" [w/W]indowify: push current tab into previous window
nnoremap <Leader>w :call MoveToNextTab()<CR>
nnoremap <Leader>W :call MoveToPrevTab()<CR>
" [p]astetoggle: toggle paste mode
nmap <Leader>p :set paste! paste?<CR>
" [m]inify
nnoremap <Leader>m :%left<CR>:%g:^#:d<CR>:g:^$:d<CR>:noh<CR>ggVGgJ
" [r]eplace variable name
nnoremap <Leader>r gd[{V%::s/<C-R>///g<left><left>
" [R]eplace variable name globally
nnoremap <Leader>R gD:%s/<C-R>///g<left><left>
" [u]ncomment lines (with given comment prepender)
command! -nargs=1 -bar UncommentLines %g:^<args>::s
nnoremap <Leader>u :UncommentLines<space>
" [v]ertical two-pane reading
noremap <silent> <Leader>v :<C-u>let @z=&so<CR>:set so=0 noscb<CR>:bo vs<CR>Ljzt:setl scb<CR><C-w>p:setl scb<CR>:let &so=@z<CR>
" open [h]eader associated with file
nnoremap <silent> <Leader>h :call SplitHeader()<CR>

" set python [b]reakpoint
let g:pymode_breakpoint_bind = '<leader>b'

" non-Leader bindings
" jk: alternative for escape
inoremap jk <Esc>
" kj: escape and return
inoremap kj <Esc>`[

" Folding with Space
set foldmethod=manual
set nofoldenable " don't automatically fold

" C and Go functions have { on the same line as the declaration
" see ':help section' for details
map [[ ?{<CR>w99[{
map ][ /}<CR>b99]}
map ]] j0[[%/{<CR>
map [] k$][%?}<CR>

" text documents should have linebreaks, since newlines imply paragraphs
autocmd BufNewFile,BufRead {*.tex,*.md,*.txt} set linebreak

" spaces/tabs settings
autocmd BufNewFile,BufRead *.py set ts=4 sw=4 expandtab
autocmd BufNewFile,BufRead *.go set ts=2 sw=2 noexpandtab " I don't care about 8-space whatever; I just want everything on-screen

" latex gets its own F-key bindings
" <F5> renders and shows the document
" <F6> just renders the document
" <F8> runs Bibtex on the document and its references
autocmd BufRead *.tex nnoremap <F5> :w<CR>:silent !pdflatex --enable-pipes --shell-escape %<CR>:silent !"$OPENCOMMAND" %:r.pdf<CR>:redraw!<CR>
autocmd BufRead *.tex nnoremap <F6> :w<CR>:silent !pdflatex --enable-pipes --shell-escape %<CR>:redraw!<CR>
autocmd BufRead *.tex nnoremap <F8> :w<CR>:silent !bibtex %:r<CR>:redraw!<CR>

" Rendering text with <F5>
autocmd BufRead *.md nnoremap <F5> :w<CR>:silent !open %<CR>:redraw!<CR>

" Running Code with <F5>
autocmd BufNewFile,BufRead *.py nnoremap <F5> :w<CR>:w !python3 -B<CR>
autocmd BufNewFile,BufRead *.scm nnoremap <F5> :w<CR>:w !csi -q<CR>
autocmd BufNewFile,BufRead *.go nnoremap <F5> :w<CR>:!go run %"<CR>"
autocmd BufNewFile,BufRead *.js nnoremap <F5> :w<CR>:w !node<CR>
autocmd BufNewFile,BufRead *.hs nnoremap <F5> :w<CR>:!runghc %"<CR>"

" Interpreting Code with <F6>
autocmd BufNewFile,BufRead *.js nnoremap <F6> :w<CR>:w !node -i<CR>
autocmd BufNewFile,BufRead *.hs nnoremap <F6> :w<CR>:!ghci "%"<CR>

" Formatting code with <F7>
autocmd BufNewFile,BufRead *.go nnoremap <F7> :w<CR>:Fmt<CR>
autocmd FileType python nnoremap <buffer> <F7> :call Autopep8()<CR>

" Tag-bar for ctags
nnoremap <silent> <F9> :TagbarToggle<CR>

" Running weird versions with <F11>
autocmd BufNewFile,BufRead *.py nnoremap <F11> :w<CR>:w !python2 -B<CR>

" Quicker multi-word variable names
" camelCase & PascalCase languages
" namely *.py,*.js,*.coffee,*.go,*.haxe,*.hs,*.haskell,*.java,*.vim
" but it should really be default, as much as I hate to admit it
autocmd BufNewFile,BufRead,VimEnter * call VarMode("camelCase")
" underscore_variable languages
" mostly the exception; I can't fight this for much longer :-(
autocmd BufNewFile,BufRead,VimEnter {*.rb,*.ruby,*.erb,*.haml,*.c,*.h,*.cpp,*.hpp} call VarMode("_")
